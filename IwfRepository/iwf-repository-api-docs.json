{
  "swagger": "2.0",
  "info": {
    "description": "Simple REST API to manage 5G EVE site information (formerly site-inventory)",
    "version": "0.1.4",
    "title": "IWF Repository API",
    "license": {
      "name": "Apache 2.0"
    }
  },
  "host": "localhost:8087",
  "basePath": "/",
  "tags": [
    {
      "name": "AvailabilityZone Entity",
      "description": "Availability Zone"
    },
    {
      "name": "DataShipper Entity",
      "description": "Data Shipper"
    },
    {
      "name": "LccnSubscription Entity",
      "description": "Lccn Subscription"
    },
    {
      "name": "Network Entity",
      "description": "Network"
    },
    {
      "name": "NfvOrchestrator Entity",
      "description": "Nfv Orchestrator"
    },
    {
      "name": "RanOrchestrator Entity",
      "description": "Ran Orchestrator"
    },
    {
      "name": "RanZone Entity",
      "description": "Ran Zone"
    },
    {
      "name": "Site Entity",
      "description": "Site"
    },
    {
      "name": "VimAccount Entity",
      "description": "Vim Account"
    },
    {
      "name": "basic-error-controller",
      "description": "Basic Error Controller"
    },
    {
      "name": "hal-explorer",
      "description": "Hal Explorer"
    },
    {
      "name": "profile-controller",
      "description": "Profile Controller"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "hal-explorer"
        ],
        "summary": "index",
        "operationId": "indexUsingGET",
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/View"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/availabilityZones": {
      "get": {
        "tags": [
          "AvailabilityZone Entity"
        ],
        "summary": "findAllAvailabilityZone",
        "operationId": "findAllAvailabilityZoneUsingGET",
        "produces": [
          "application/hal+json",
          "application/json",
          "application/x-spring-data-compact+json",
          "text/uri-list"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«AvailabilityZone»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "AvailabilityZone Entity"
        ],
        "summary": "saveAvailabilityZone",
        "operationId": "saveAvailabilityZoneUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AvailabilityZone"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«AvailabilityZone»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/availabilityZones/search/findByLocation": {
      "get": {
        "tags": [
          "AvailabilityZone Entity"
        ],
        "summary": "findByLocationAvailabilityZone",
        "operationId": "findByLocationAvailabilityZoneUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "location",
            "in": "query",
            "description": "location",
            "required": false,
            "type": "string",
            "enum": [
              "CLOUD",
              "EDGE"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«AvailabilityZone»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/availabilityZones/{id}": {
      "get": {
        "tags": [
          "AvailabilityZone Entity"
        ],
        "summary": "findByIdAvailabilityZone",
        "operationId": "findByIdAvailabilityZoneUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«AvailabilityZone»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "AvailabilityZone Entity"
        ],
        "summary": "saveAvailabilityZone",
        "operationId": "saveAvailabilityZoneUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AvailabilityZone"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«AvailabilityZone»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "AvailabilityZone Entity"
        ],
        "summary": "deleteAvailabilityZone",
        "operationId": "deleteAvailabilityZoneUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "AvailabilityZone Entity"
        ],
        "summary": "saveAvailabilityZone",
        "operationId": "saveAvailabilityZoneUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AvailabilityZone"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«AvailabilityZone»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/availabilityZones/{id}/vimAccount": {
      "get": {
        "tags": [
          "AvailabilityZone Entity"
        ],
        "summary": "availabilityZoneVimAccount",
        "operationId": "availabilityZoneVimAccountUsingGET",
        "produces": [
          "application/hal+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«VimAccount»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "AvailabilityZone Entity"
        ],
        "summary": "availabilityZoneVimAccount",
        "operationId": "availabilityZoneVimAccountUsingPOST",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«VimAccount»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "AvailabilityZone Entity"
        ],
        "summary": "availabilityZoneVimAccount",
        "operationId": "availabilityZoneVimAccountUsingPUT",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«VimAccount»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "AvailabilityZone Entity"
        ],
        "summary": "availabilityZoneVimAccount",
        "operationId": "availabilityZoneVimAccountUsingDELETE",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "AvailabilityZone Entity"
        ],
        "summary": "availabilityZoneVimAccount",
        "operationId": "availabilityZoneVimAccountUsingPATCH",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«VimAccount»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/dataShippers": {
      "get": {
        "tags": [
          "DataShipper Entity"
        ],
        "summary": "findAllDataShipper",
        "operationId": "findAllDataShipperUsingGET",
        "produces": [
          "application/hal+json",
          "application/json",
          "application/x-spring-data-compact+json",
          "text/uri-list"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«DataShipper»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "DataShipper Entity"
        ],
        "summary": "saveDataShipper",
        "operationId": "saveDataShipperUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataShipper"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«DataShipper»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/dataShippers/search/findByDataShipperId": {
      "get": {
        "tags": [
          "DataShipper Entity"
        ],
        "summary": "findByDataShipperIdDataShipper",
        "operationId": "findByDataShipperIdDataShipperUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "dataShipperId",
            "in": "query",
            "description": "dataShipperId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«DataShipper»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/dataShippers/search/findByMetricType": {
      "get": {
        "tags": [
          "DataShipper Entity"
        ],
        "summary": "findByMetricTypeDataShipper",
        "operationId": "findByMetricTypeDataShipperUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "metricType",
            "in": "query",
            "description": "metricType",
            "required": false,
            "type": "string",
            "enum": [
              "BANDWIDTH",
              "CPU_CONSUMPTION",
              "JITTER",
              "LATENCY",
              "LOST_PKT",
              "MEMORY_CONSUMPTION",
              "OTHER",
              "RECEIVED_PKT",
              "SENT_PKT"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«DataShipper»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/dataShippers/{id}": {
      "get": {
        "tags": [
          "DataShipper Entity"
        ],
        "summary": "findByIdDataShipper",
        "operationId": "findByIdDataShipperUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«DataShipper»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "DataShipper Entity"
        ],
        "summary": "saveDataShipper",
        "operationId": "saveDataShipperUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataShipper"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«DataShipper»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "DataShipper Entity"
        ],
        "summary": "deleteDataShipper",
        "operationId": "deleteDataShipperUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "DataShipper Entity"
        ],
        "summary": "saveDataShipper",
        "operationId": "saveDataShipperUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataShipper"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«DataShipper»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/dataShippers/{id}/site": {
      "get": {
        "tags": [
          "DataShipper Entity"
        ],
        "summary": "dataShipperSite",
        "operationId": "dataShipperSiteUsingGET",
        "produces": [
          "application/hal+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«Site»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "DataShipper Entity"
        ],
        "summary": "dataShipperSite",
        "operationId": "dataShipperSiteUsingPOST",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«Site»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "DataShipper Entity"
        ],
        "summary": "dataShipperSite",
        "operationId": "dataShipperSiteUsingPUT",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«Site»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "DataShipper Entity"
        ],
        "summary": "dataShipperSite",
        "operationId": "dataShipperSiteUsingDELETE",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "DataShipper Entity"
        ],
        "summary": "dataShipperSite",
        "operationId": "dataShipperSiteUsingPATCH",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«Site»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/error": {
      "get": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingGET",
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "head": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingHEAD",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingDELETE",
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "options": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingOPTIONS",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/explorer": {
      "get": {
        "tags": [
          "hal-explorer"
        ],
        "summary": "explorer",
        "operationId": "explorerUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/View"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/networks": {
      "get": {
        "tags": [
          "Network Entity"
        ],
        "summary": "findAllNetwork",
        "operationId": "findAllNetworkUsingGET",
        "produces": [
          "application/hal+json",
          "application/json",
          "application/x-spring-data-compact+json",
          "text/uri-list"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«Network»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Network Entity"
        ],
        "summary": "saveNetwork",
        "operationId": "saveNetworkUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Network"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«Network»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/networks/{id}": {
      "get": {
        "tags": [
          "Network Entity"
        ],
        "summary": "findByIdNetwork",
        "operationId": "findByIdNetworkUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«Network»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Network Entity"
        ],
        "summary": "saveNetwork",
        "operationId": "saveNetworkUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Network"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«Network»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Network Entity"
        ],
        "summary": "deleteNetwork",
        "operationId": "deleteNetworkUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "Network Entity"
        ],
        "summary": "saveNetwork",
        "operationId": "saveNetworkUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Network"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«Network»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/networks/{id}/site": {
      "get": {
        "tags": [
          "Network Entity"
        ],
        "summary": "networkSite",
        "operationId": "networkSiteUsingGET",
        "produces": [
          "application/hal+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«Site»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Network Entity"
        ],
        "summary": "networkSite",
        "operationId": "networkSiteUsingPOST",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«Site»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Network Entity"
        ],
        "summary": "networkSite",
        "operationId": "networkSiteUsingPUT",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«Site»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Network Entity"
        ],
        "summary": "networkSite",
        "operationId": "networkSiteUsingDELETE",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "Network Entity"
        ],
        "summary": "networkSite",
        "operationId": "networkSiteUsingPATCH",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«Site»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/nfvOrchestrators": {
      "get": {
        "tags": [
          "NfvOrchestrator Entity"
        ],
        "summary": "findAllNfvOrchestrator",
        "operationId": "findAllNfvOrchestratorUsingGET",
        "produces": [
          "application/hal+json",
          "application/json",
          "application/x-spring-data-compact+json",
          "text/uri-list"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«NfvOrchestrator»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "NfvOrchestrator Entity"
        ],
        "summary": "saveNfvOrchestrator",
        "operationId": "saveNfvOrchestratorUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NfvOrchestrator"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«NfvOrchestrator»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/nfvOrchestrators/search/findByTypeIgnoreCase": {
      "get": {
        "tags": [
          "NfvOrchestrator Entity"
        ],
        "summary": "findByTypeIgnoreCaseNfvOrchestrator",
        "operationId": "findByTypeIgnoreCaseNfvOrchestratorUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«NfvOrchestrator»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/nfvOrchestrators/{id}": {
      "get": {
        "tags": [
          "NfvOrchestrator Entity"
        ],
        "summary": "findByIdNfvOrchestrator",
        "operationId": "findByIdNfvOrchestratorUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«NfvOrchestrator»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "NfvOrchestrator Entity"
        ],
        "summary": "saveNfvOrchestrator",
        "operationId": "saveNfvOrchestratorUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NfvOrchestrator"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«NfvOrchestrator»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "NfvOrchestrator Entity"
        ],
        "summary": "deleteNfvOrchestrator",
        "operationId": "deleteNfvOrchestratorUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "NfvOrchestrator Entity"
        ],
        "summary": "saveNfvOrchestrator",
        "operationId": "saveNfvOrchestratorUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NfvOrchestrator"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«NfvOrchestrator»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/nfvOrchestrators/{id}/site": {
      "get": {
        "tags": [
          "NfvOrchestrator Entity"
        ],
        "summary": "nfvOrchestratorSite",
        "operationId": "nfvOrchestratorSiteUsingGET",
        "produces": [
          "application/hal+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«Site»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "NfvOrchestrator Entity"
        ],
        "summary": "nfvOrchestratorSite",
        "operationId": "nfvOrchestratorSiteUsingPOST",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«Site»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "NfvOrchestrator Entity"
        ],
        "summary": "nfvOrchestratorSite",
        "operationId": "nfvOrchestratorSiteUsingPUT",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«Site»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "NfvOrchestrator Entity"
        ],
        "summary": "nfvOrchestratorSite",
        "operationId": "nfvOrchestratorSiteUsingDELETE",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "NfvOrchestrator Entity"
        ],
        "summary": "nfvOrchestratorSite",
        "operationId": "nfvOrchestratorSiteUsingPATCH",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«Site»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/nfvOrchestrators/{id}/subscriptions": {
      "get": {
        "tags": [
          "NfvOrchestrator Entity"
        ],
        "summary": "nfvOrchestratorSubscriptions",
        "operationId": "nfvOrchestratorSubscriptionsUsingGET",
        "produces": [
          "application/hal+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«LccnSubscription»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "NfvOrchestrator Entity"
        ],
        "summary": "nfvOrchestratorSubscriptions",
        "operationId": "nfvOrchestratorSubscriptionsUsingPOST",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«LccnSubscription»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "NfvOrchestrator Entity"
        ],
        "summary": "nfvOrchestratorSubscriptions",
        "operationId": "nfvOrchestratorSubscriptionsUsingPUT",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«LccnSubscription»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "NfvOrchestrator Entity"
        ],
        "summary": "nfvOrchestratorSubscriptions",
        "operationId": "nfvOrchestratorSubscriptionsUsingDELETE_1",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "NfvOrchestrator Entity"
        ],
        "summary": "nfvOrchestratorSubscriptions",
        "operationId": "nfvOrchestratorSubscriptionsUsingPATCH",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«LccnSubscription»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/nfvOrchestrators/{id}/subscriptions/{lccnsubscriptionId}": {
      "get": {
        "tags": [
          "NfvOrchestrator Entity"
        ],
        "summary": "nfvOrchestratorSubscriptions",
        "operationId": "nfvOrchestratorSubscriptionsUsingGET_1",
        "consumes": [
          "application/hal+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "lccnsubscriptionId",
            "in": "path",
            "description": "lccnsubscriptionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«LccnSubscription»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "NfvOrchestrator Entity"
        ],
        "summary": "nfvOrchestratorSubscriptions",
        "operationId": "nfvOrchestratorSubscriptionsUsingDELETE",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "lccnsubscriptionId",
            "in": "path",
            "description": "lccnsubscriptionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/nfvOrchestrators/{id}/vimAccounts": {
      "get": {
        "tags": [
          "NfvOrchestrator Entity"
        ],
        "summary": "nfvOrchestratorVimAccounts",
        "operationId": "nfvOrchestratorVimAccountsUsingGET",
        "produces": [
          "application/hal+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«VimAccount»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "NfvOrchestrator Entity"
        ],
        "summary": "nfvOrchestratorVimAccounts",
        "operationId": "nfvOrchestratorVimAccountsUsingPOST",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«VimAccount»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "NfvOrchestrator Entity"
        ],
        "summary": "nfvOrchestratorVimAccounts",
        "operationId": "nfvOrchestratorVimAccountsUsingPUT",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«VimAccount»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "NfvOrchestrator Entity"
        ],
        "summary": "nfvOrchestratorVimAccounts",
        "operationId": "nfvOrchestratorVimAccountsUsingDELETE_1",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "NfvOrchestrator Entity"
        ],
        "summary": "nfvOrchestratorVimAccounts",
        "operationId": "nfvOrchestratorVimAccountsUsingPATCH",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«VimAccount»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/nfvOrchestrators/{id}/vimAccounts/{vimaccountId}": {
      "get": {
        "tags": [
          "NfvOrchestrator Entity"
        ],
        "summary": "nfvOrchestratorVimAccounts",
        "operationId": "nfvOrchestratorVimAccountsUsingGET_1",
        "consumes": [
          "application/hal+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "vimaccountId",
            "in": "path",
            "description": "vimaccountId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«VimAccount»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "NfvOrchestrator Entity"
        ],
        "summary": "nfvOrchestratorVimAccounts",
        "operationId": "nfvOrchestratorVimAccountsUsingDELETE",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "vimaccountId",
            "in": "path",
            "description": "vimaccountId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/profile": {
      "get": {
        "tags": [
          "profile-controller"
        ],
        "summary": "listAllFormsOfMetadata",
        "operationId": "listAllFormsOfMetadataUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RepresentationModel«object»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "options": {
        "tags": [
          "profile-controller"
        ],
        "summary": "profileOptions",
        "operationId": "profileOptionsUsingOPTIONS",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/ranOrchestrators": {
      "get": {
        "tags": [
          "RanOrchestrator Entity"
        ],
        "summary": "findAllRanOrchestrator",
        "operationId": "findAllRanOrchestratorUsingGET",
        "produces": [
          "application/hal+json",
          "application/json",
          "application/x-spring-data-compact+json",
          "text/uri-list"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«RanOrchestrator»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "RanOrchestrator Entity"
        ],
        "summary": "saveRanOrchestrator",
        "operationId": "saveRanOrchestratorUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RanOrchestrator"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«RanOrchestrator»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/ranOrchestrators/{id}": {
      "get": {
        "tags": [
          "RanOrchestrator Entity"
        ],
        "summary": "findByIdRanOrchestrator",
        "operationId": "findByIdRanOrchestratorUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«RanOrchestrator»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "RanOrchestrator Entity"
        ],
        "summary": "saveRanOrchestrator",
        "operationId": "saveRanOrchestratorUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RanOrchestrator"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«RanOrchestrator»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "RanOrchestrator Entity"
        ],
        "summary": "deleteRanOrchestrator",
        "operationId": "deleteRanOrchestratorUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "RanOrchestrator Entity"
        ],
        "summary": "saveRanOrchestrator",
        "operationId": "saveRanOrchestratorUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RanOrchestrator"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«RanOrchestrator»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/ranOrchestrators/{id}/ranZones": {
      "get": {
        "tags": [
          "RanOrchestrator Entity"
        ],
        "summary": "ranOrchestratorRanZones",
        "operationId": "ranOrchestratorRanZonesUsingGET",
        "produces": [
          "application/hal+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«RanZone»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "RanOrchestrator Entity"
        ],
        "summary": "ranOrchestratorRanZones",
        "operationId": "ranOrchestratorRanZonesUsingPOST",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«RanZone»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "RanOrchestrator Entity"
        ],
        "summary": "ranOrchestratorRanZones",
        "operationId": "ranOrchestratorRanZonesUsingPUT",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«RanZone»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "RanOrchestrator Entity"
        ],
        "summary": "ranOrchestratorRanZones",
        "operationId": "ranOrchestratorRanZonesUsingDELETE_1",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "RanOrchestrator Entity"
        ],
        "summary": "ranOrchestratorRanZones",
        "operationId": "ranOrchestratorRanZonesUsingPATCH",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«RanZone»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/ranOrchestrators/{id}/ranZones/{ranzoneId}": {
      "get": {
        "tags": [
          "RanOrchestrator Entity"
        ],
        "summary": "ranOrchestratorRanZones",
        "operationId": "ranOrchestratorRanZonesUsingGET_1",
        "consumes": [
          "application/hal+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "ranzoneId",
            "in": "path",
            "description": "ranzoneId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«RanZone»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "RanOrchestrator Entity"
        ],
        "summary": "ranOrchestratorRanZones",
        "operationId": "ranOrchestratorRanZonesUsingDELETE",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "ranzoneId",
            "in": "path",
            "description": "ranzoneId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/ranOrchestrators/{id}/site": {
      "get": {
        "tags": [
          "RanOrchestrator Entity"
        ],
        "summary": "ranOrchestratorSite",
        "operationId": "ranOrchestratorSiteUsingGET",
        "produces": [
          "application/hal+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«Site»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "RanOrchestrator Entity"
        ],
        "summary": "ranOrchestratorSite",
        "operationId": "ranOrchestratorSiteUsingPOST",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«Site»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "RanOrchestrator Entity"
        ],
        "summary": "ranOrchestratorSite",
        "operationId": "ranOrchestratorSiteUsingPUT",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«Site»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "RanOrchestrator Entity"
        ],
        "summary": "ranOrchestratorSite",
        "operationId": "ranOrchestratorSiteUsingDELETE",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "RanOrchestrator Entity"
        ],
        "summary": "ranOrchestratorSite",
        "operationId": "ranOrchestratorSiteUsingPATCH",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«Site»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/ranZones": {
      "get": {
        "tags": [
          "RanZone Entity"
        ],
        "summary": "findAllRanZone",
        "operationId": "findAllRanZoneUsingGET",
        "produces": [
          "application/hal+json",
          "application/json",
          "application/x-spring-data-compact+json",
          "text/uri-list"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«RanZone»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "RanZone Entity"
        ],
        "summary": "saveRanZone",
        "operationId": "saveRanZoneUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RanZone"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«RanZone»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/ranZones/{id}": {
      "get": {
        "tags": [
          "RanZone Entity"
        ],
        "summary": "findByIdRanZone",
        "operationId": "findByIdRanZoneUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«RanZone»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "RanZone Entity"
        ],
        "summary": "saveRanZone",
        "operationId": "saveRanZoneUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RanZone"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«RanZone»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "RanZone Entity"
        ],
        "summary": "deleteRanZone",
        "operationId": "deleteRanZoneUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "RanZone Entity"
        ],
        "summary": "saveRanZone",
        "operationId": "saveRanZoneUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RanZone"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«RanZone»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/ranZones/{id}/ranOrchestrator": {
      "get": {
        "tags": [
          "RanZone Entity"
        ],
        "summary": "ranZoneRanOrchestrator",
        "operationId": "ranZoneRanOrchestratorUsingGET",
        "produces": [
          "application/hal+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«RanOrchestrator»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "RanZone Entity"
        ],
        "summary": "ranZoneRanOrchestrator",
        "operationId": "ranZoneRanOrchestratorUsingPOST",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«RanOrchestrator»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "RanZone Entity"
        ],
        "summary": "ranZoneRanOrchestrator",
        "operationId": "ranZoneRanOrchestratorUsingPUT",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«RanOrchestrator»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "RanZone Entity"
        ],
        "summary": "ranZoneRanOrchestrator",
        "operationId": "ranZoneRanOrchestratorUsingDELETE",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "RanZone Entity"
        ],
        "summary": "ranZoneRanOrchestrator",
        "operationId": "ranZoneRanOrchestratorUsingPATCH",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«RanOrchestrator»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/sites": {
      "get": {
        "tags": [
          "Site Entity"
        ],
        "summary": "findAllSite",
        "operationId": "findAllSiteUsingGET",
        "produces": [
          "application/hal+json",
          "application/json",
          "application/x-spring-data-compact+json",
          "text/uri-list"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«Site»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Site Entity"
        ],
        "summary": "saveSite",
        "operationId": "saveSiteUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Site"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«Site»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/sites/search/findByNameIgnoreCase": {
      "get": {
        "tags": [
          "Site Entity"
        ],
        "summary": "findByNameIgnoreCaseSite",
        "operationId": "findByNameIgnoreCaseSiteUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«Site»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/sites/{id}": {
      "get": {
        "tags": [
          "Site Entity"
        ],
        "summary": "findByIdSite",
        "operationId": "findByIdSiteUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«Site»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Site Entity"
        ],
        "summary": "saveSite",
        "operationId": "saveSiteUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Site"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«Site»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Site Entity"
        ],
        "summary": "deleteSite",
        "operationId": "deleteSiteUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "Site Entity"
        ],
        "summary": "saveSite",
        "operationId": "saveSiteUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Site"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«Site»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/sites/{id}/dataShippers": {
      "get": {
        "tags": [
          "Site Entity"
        ],
        "summary": "siteDataShippers",
        "operationId": "siteDataShippersUsingGET",
        "produces": [
          "application/hal+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«DataShipper»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Site Entity"
        ],
        "summary": "siteDataShippers",
        "operationId": "siteDataShippersUsingPOST",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«DataShipper»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Site Entity"
        ],
        "summary": "siteDataShippers",
        "operationId": "siteDataShippersUsingPUT",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«DataShipper»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Site Entity"
        ],
        "summary": "siteDataShippers",
        "operationId": "siteDataShippersUsingDELETE_1",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "Site Entity"
        ],
        "summary": "siteDataShippers",
        "operationId": "siteDataShippersUsingPATCH",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«DataShipper»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/sites/{id}/dataShippers/{datashipperId}": {
      "get": {
        "tags": [
          "Site Entity"
        ],
        "summary": "siteDataShippers",
        "operationId": "siteDataShippersUsingGET_1",
        "consumes": [
          "application/hal+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "datashipperId",
            "in": "path",
            "description": "datashipperId",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«DataShipper»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Site Entity"
        ],
        "summary": "siteDataShippers",
        "operationId": "siteDataShippersUsingDELETE",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "datashipperId",
            "in": "path",
            "description": "datashipperId",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/sites/{id}/networks": {
      "get": {
        "tags": [
          "Site Entity"
        ],
        "summary": "siteNetworks",
        "operationId": "siteNetworksUsingGET",
        "produces": [
          "application/hal+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«Network»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Site Entity"
        ],
        "summary": "siteNetworks",
        "operationId": "siteNetworksUsingPOST",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«Network»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Site Entity"
        ],
        "summary": "siteNetworks",
        "operationId": "siteNetworksUsingPUT",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«Network»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Site Entity"
        ],
        "summary": "siteNetworks",
        "operationId": "siteNetworksUsingDELETE_1",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "Site Entity"
        ],
        "summary": "siteNetworks",
        "operationId": "siteNetworksUsingPATCH",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«Network»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/sites/{id}/networks/{networkId}": {
      "get": {
        "tags": [
          "Site Entity"
        ],
        "summary": "siteNetworks",
        "operationId": "siteNetworksUsingGET_1",
        "consumes": [
          "application/hal+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "networkId",
            "in": "path",
            "description": "networkId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«Network»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Site Entity"
        ],
        "summary": "siteNetworks",
        "operationId": "siteNetworksUsingDELETE",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "networkId",
            "in": "path",
            "description": "networkId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/sites/{id}/nfvOrchestrators": {
      "get": {
        "tags": [
          "Site Entity"
        ],
        "summary": "siteNfvOrchestrators",
        "operationId": "siteNfvOrchestratorsUsingGET",
        "produces": [
          "application/hal+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«NfvOrchestrator»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Site Entity"
        ],
        "summary": "siteNfvOrchestrators",
        "operationId": "siteNfvOrchestratorsUsingPOST",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«NfvOrchestrator»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Site Entity"
        ],
        "summary": "siteNfvOrchestrators",
        "operationId": "siteNfvOrchestratorsUsingPUT",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«NfvOrchestrator»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Site Entity"
        ],
        "summary": "siteNfvOrchestrators",
        "operationId": "siteNfvOrchestratorsUsingDELETE_1",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "Site Entity"
        ],
        "summary": "siteNfvOrchestrators",
        "operationId": "siteNfvOrchestratorsUsingPATCH",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«NfvOrchestrator»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/sites/{id}/nfvOrchestrators/{nfvorchestratorId}": {
      "get": {
        "tags": [
          "Site Entity"
        ],
        "summary": "siteNfvOrchestrators",
        "operationId": "siteNfvOrchestratorsUsingGET_1",
        "consumes": [
          "application/hal+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "nfvorchestratorId",
            "in": "path",
            "description": "nfvorchestratorId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«NfvOrchestrator»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Site Entity"
        ],
        "summary": "siteNfvOrchestrators",
        "operationId": "siteNfvOrchestratorsUsingDELETE",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "nfvorchestratorId",
            "in": "path",
            "description": "nfvorchestratorId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/sites/{id}/ranOrchestrators": {
      "get": {
        "tags": [
          "Site Entity"
        ],
        "summary": "siteRanOrchestrators",
        "operationId": "siteRanOrchestratorsUsingGET",
        "produces": [
          "application/hal+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«RanOrchestrator»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Site Entity"
        ],
        "summary": "siteRanOrchestrators",
        "operationId": "siteRanOrchestratorsUsingPOST",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«RanOrchestrator»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Site Entity"
        ],
        "summary": "siteRanOrchestrators",
        "operationId": "siteRanOrchestratorsUsingPUT",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«RanOrchestrator»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Site Entity"
        ],
        "summary": "siteRanOrchestrators",
        "operationId": "siteRanOrchestratorsUsingDELETE_1",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "Site Entity"
        ],
        "summary": "siteRanOrchestrators",
        "operationId": "siteRanOrchestratorsUsingPATCH",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«RanOrchestrator»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/sites/{id}/ranOrchestrators/{ranorchestratorId}": {
      "get": {
        "tags": [
          "Site Entity"
        ],
        "summary": "siteRanOrchestrators",
        "operationId": "siteRanOrchestratorsUsingGET_1",
        "consumes": [
          "application/hal+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "ranorchestratorId",
            "in": "path",
            "description": "ranorchestratorId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«RanOrchestrator»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Site Entity"
        ],
        "summary": "siteRanOrchestrators",
        "operationId": "siteRanOrchestratorsUsingDELETE",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "ranorchestratorId",
            "in": "path",
            "description": "ranorchestratorId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/subscriptions": {
      "get": {
        "tags": [
          "LccnSubscription Entity"
        ],
        "summary": "findAllLccnSubscription",
        "operationId": "findAllLccnSubscriptionUsingGET",
        "produces": [
          "application/hal+json",
          "application/json",
          "application/x-spring-data-compact+json",
          "text/uri-list"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«LccnSubscription»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "LccnSubscription Entity"
        ],
        "summary": "saveLccnSubscription",
        "operationId": "saveLccnSubscriptionUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LccnSubscription"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«LccnSubscription»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subscriptions/search/findByNsInstanceId": {
      "get": {
        "tags": [
          "LccnSubscription Entity"
        ],
        "summary": "findByNsInstanceIdLccnSubscription",
        "operationId": "findByNsInstanceIdLccnSubscriptionUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "nsInstanceId",
            "in": "query",
            "description": "nsInstanceId",
            "required": false,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«LccnSubscription»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subscriptions/{id}": {
      "get": {
        "tags": [
          "LccnSubscription Entity"
        ],
        "summary": "findByIdLccnSubscription",
        "operationId": "findByIdLccnSubscriptionUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«LccnSubscription»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "LccnSubscription Entity"
        ],
        "summary": "saveLccnSubscription",
        "operationId": "saveLccnSubscriptionUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LccnSubscription"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«LccnSubscription»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "LccnSubscription Entity"
        ],
        "summary": "deleteLccnSubscription",
        "operationId": "deleteLccnSubscriptionUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "LccnSubscription Entity"
        ],
        "summary": "saveLccnSubscription",
        "operationId": "saveLccnSubscriptionUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LccnSubscription"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«LccnSubscription»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/subscriptions/{id}/nfvOrchestrators": {
      "get": {
        "tags": [
          "LccnSubscription Entity"
        ],
        "summary": "lccnSubscriptionNfvOrchestrators",
        "operationId": "lccnSubscriptionNfvOrchestratorsUsingGET",
        "produces": [
          "application/hal+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«NfvOrchestrator»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "LccnSubscription Entity"
        ],
        "summary": "lccnSubscriptionNfvOrchestrators",
        "operationId": "lccnSubscriptionNfvOrchestratorsUsingPOST",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«NfvOrchestrator»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "LccnSubscription Entity"
        ],
        "summary": "lccnSubscriptionNfvOrchestrators",
        "operationId": "lccnSubscriptionNfvOrchestratorsUsingPUT",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«NfvOrchestrator»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "LccnSubscription Entity"
        ],
        "summary": "lccnSubscriptionNfvOrchestrators",
        "operationId": "lccnSubscriptionNfvOrchestratorsUsingDELETE_1",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "LccnSubscription Entity"
        ],
        "summary": "lccnSubscriptionNfvOrchestrators",
        "operationId": "lccnSubscriptionNfvOrchestratorsUsingPATCH",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«NfvOrchestrator»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/subscriptions/{id}/nfvOrchestrators/{nfvorchestratorId}": {
      "get": {
        "tags": [
          "LccnSubscription Entity"
        ],
        "summary": "lccnSubscriptionNfvOrchestrators",
        "operationId": "lccnSubscriptionNfvOrchestratorsUsingGET_1",
        "consumes": [
          "application/hal+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "nfvorchestratorId",
            "in": "path",
            "description": "nfvorchestratorId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«NfvOrchestrator»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "LccnSubscription Entity"
        ],
        "summary": "lccnSubscriptionNfvOrchestrators",
        "operationId": "lccnSubscriptionNfvOrchestratorsUsingDELETE",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "nfvorchestratorId",
            "in": "path",
            "description": "nfvorchestratorId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/vimAccounts": {
      "get": {
        "tags": [
          "VimAccount Entity"
        ],
        "summary": "findAllVimAccount",
        "operationId": "findAllVimAccountUsingGET",
        "produces": [
          "application/hal+json",
          "application/json",
          "application/x-spring-data-compact+json",
          "text/uri-list"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«VimAccount»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "VimAccount Entity"
        ],
        "summary": "saveVimAccount",
        "operationId": "saveVimAccountUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VimAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«VimAccount»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/vimAccounts/search/findByTypeIgnoreCase": {
      "get": {
        "tags": [
          "VimAccount Entity"
        ],
        "summary": "findByTypeIgnoreCaseVimAccount",
        "operationId": "findByTypeIgnoreCaseVimAccountUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«VimAccount»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/vimAccounts/search/findByVimAccountNfvoId": {
      "get": {
        "tags": [
          "VimAccount Entity"
        ],
        "summary": "findByVimAccountNfvoIdVimAccount",
        "operationId": "findByVimAccountNfvoIdVimAccountUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "uuid",
            "required": false,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«VimAccount»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/vimAccounts/{id}": {
      "get": {
        "tags": [
          "VimAccount Entity"
        ],
        "summary": "findByIdVimAccount",
        "operationId": "findByIdVimAccountUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«VimAccount»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "VimAccount Entity"
        ],
        "summary": "saveVimAccount",
        "operationId": "saveVimAccountUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VimAccount"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«VimAccount»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "VimAccount Entity"
        ],
        "summary": "deleteVimAccount",
        "operationId": "deleteVimAccountUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "VimAccount Entity"
        ],
        "summary": "saveVimAccount",
        "operationId": "saveVimAccountUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VimAccount"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«VimAccount»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/vimAccounts/{id}/availabilityZone": {
      "get": {
        "tags": [
          "VimAccount Entity"
        ],
        "summary": "vimAccountAvailabilityZone",
        "operationId": "vimAccountAvailabilityZoneUsingGET",
        "produces": [
          "application/hal+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«AvailabilityZone»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "VimAccount Entity"
        ],
        "summary": "vimAccountAvailabilityZone",
        "operationId": "vimAccountAvailabilityZoneUsingPOST",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«AvailabilityZone»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "VimAccount Entity"
        ],
        "summary": "vimAccountAvailabilityZone",
        "operationId": "vimAccountAvailabilityZoneUsingPUT",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«AvailabilityZone»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "VimAccount Entity"
        ],
        "summary": "vimAccountAvailabilityZone",
        "operationId": "vimAccountAvailabilityZoneUsingDELETE",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "VimAccount Entity"
        ],
        "summary": "vimAccountAvailabilityZone",
        "operationId": "vimAccountAvailabilityZoneUsingPATCH",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«AvailabilityZone»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/vimAccounts/{id}/nfvOrchestrators": {
      "get": {
        "tags": [
          "VimAccount Entity"
        ],
        "summary": "vimAccountNfvOrchestrators",
        "operationId": "vimAccountNfvOrchestratorsUsingGET",
        "produces": [
          "application/hal+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«NfvOrchestrator»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "VimAccount Entity"
        ],
        "summary": "vimAccountNfvOrchestrators",
        "operationId": "vimAccountNfvOrchestratorsUsingPOST",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«NfvOrchestrator»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "VimAccount Entity"
        ],
        "summary": "vimAccountNfvOrchestrators",
        "operationId": "vimAccountNfvOrchestratorsUsingPUT",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«NfvOrchestrator»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "VimAccount Entity"
        ],
        "summary": "vimAccountNfvOrchestrators",
        "operationId": "vimAccountNfvOrchestratorsUsingDELETE_1",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "VimAccount Entity"
        ],
        "summary": "vimAccountNfvOrchestrators",
        "operationId": "vimAccountNfvOrchestratorsUsingPATCH",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModel«NfvOrchestrator»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/vimAccounts/{id}/nfvOrchestrators/{nfvorchestratorId}": {
      "get": {
        "tags": [
          "VimAccount Entity"
        ],
        "summary": "vimAccountNfvOrchestrators",
        "operationId": "vimAccountNfvOrchestratorsUsingGET_1",
        "consumes": [
          "application/hal+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "nfvorchestratorId",
            "in": "path",
            "description": "nfvorchestratorId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModel«NfvOrchestrator»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "VimAccount Entity"
        ],
        "summary": "vimAccountNfvOrchestrators",
        "operationId": "vimAccountNfvOrchestratorsUsingDELETE",
        "consumes": [
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "nfvorchestratorId",
            "in": "path",
            "description": "nfvorchestratorId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "definitions": {
    "AvailabilityZone": {
      "type": "object",
      "required": [
        "location",
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "location": {
          "type": "string",
          "enum": [
            "CLOUD",
            "EDGE"
          ]
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "AvailabilityZone"
    },
    "CollectionModel«AvailabilityZone»": {
      "type": "object",
      "required": [
        "_embedded",
        "_links"
      ],
      "properties": {
        "_embedded": {
          "$ref": "#/definitions/EmbeddedCollection«AvailabilityZone»"
        },
        "_links": {
          "type": "object",
          "description": "Link collection",
          "additionalProperties": {
            "$ref": "#/definitions/Error-ModelName{namespace='org.springframework.hateoas', name='Link'}"
          }
        }
      },
      "title": "CollectionModel«AvailabilityZone»",
      "xml": {
        "name": "entities",
        "attribute": false,
        "wrapped": false
      },
      "description": "Resources of AvailabilityZone"
    },
    "CollectionModel«DataShipper»": {
      "type": "object",
      "required": [
        "_embedded",
        "_links"
      ],
      "properties": {
        "_embedded": {
          "$ref": "#/definitions/EmbeddedCollection«DataShipper»"
        },
        "_links": {
          "type": "object",
          "description": "Link collection",
          "additionalProperties": {
            "$ref": "#/definitions/Error-ModelName{namespace='org.springframework.hateoas', name='Link'}"
          }
        }
      },
      "title": "CollectionModel«DataShipper»",
      "xml": {
        "name": "entities",
        "attribute": false,
        "wrapped": false
      },
      "description": "Resources of DataShipper"
    },
    "CollectionModel«LccnSubscription»": {
      "type": "object",
      "required": [
        "_embedded",
        "_links"
      ],
      "properties": {
        "_embedded": {
          "$ref": "#/definitions/EmbeddedCollection«LccnSubscription»"
        },
        "_links": {
          "type": "object",
          "description": "Link collection",
          "additionalProperties": {
            "$ref": "#/definitions/Error-ModelName{namespace='org.springframework.hateoas', name='Link'}"
          }
        }
      },
      "title": "CollectionModel«LccnSubscription»",
      "xml": {
        "name": "entities",
        "attribute": false,
        "wrapped": false
      },
      "description": "Resources of LccnSubscription"
    },
    "CollectionModel«Network»": {
      "type": "object",
      "required": [
        "_embedded",
        "_links"
      ],
      "properties": {
        "_embedded": {
          "$ref": "#/definitions/EmbeddedCollection«Network»"
        },
        "_links": {
          "type": "object",
          "description": "Link collection",
          "additionalProperties": {
            "$ref": "#/definitions/Error-ModelName{namespace='org.springframework.hateoas', name='Link'}"
          }
        }
      },
      "title": "CollectionModel«Network»",
      "xml": {
        "name": "entities",
        "attribute": false,
        "wrapped": false
      },
      "description": "Resources of Network"
    },
    "CollectionModel«NfvOrchestrator»": {
      "type": "object",
      "required": [
        "_embedded",
        "_links"
      ],
      "properties": {
        "_embedded": {
          "$ref": "#/definitions/EmbeddedCollection«NfvOrchestrator»"
        },
        "_links": {
          "type": "object",
          "description": "Link collection",
          "additionalProperties": {
            "$ref": "#/definitions/Error-ModelName{namespace='org.springframework.hateoas', name='Link'}"
          }
        }
      },
      "title": "CollectionModel«NfvOrchestrator»",
      "xml": {
        "name": "entities",
        "attribute": false,
        "wrapped": false
      },
      "description": "Resources of NfvOrchestrator"
    },
    "CollectionModel«RanOrchestrator»": {
      "type": "object",
      "required": [
        "_embedded",
        "_links"
      ],
      "properties": {
        "_embedded": {
          "$ref": "#/definitions/EmbeddedCollection«RanOrchestrator»"
        },
        "_links": {
          "type": "object",
          "description": "Link collection",
          "additionalProperties": {
            "$ref": "#/definitions/Error-ModelName{namespace='org.springframework.hateoas', name='Link'}"
          }
        }
      },
      "title": "CollectionModel«RanOrchestrator»",
      "xml": {
        "name": "entities",
        "attribute": false,
        "wrapped": false
      },
      "description": "Resources of RanOrchestrator"
    },
    "CollectionModel«RanZone»": {
      "type": "object",
      "required": [
        "_embedded",
        "_links"
      ],
      "properties": {
        "_embedded": {
          "$ref": "#/definitions/EmbeddedCollection«RanZone»"
        },
        "_links": {
          "type": "object",
          "description": "Link collection",
          "additionalProperties": {
            "$ref": "#/definitions/Error-ModelName{namespace='org.springframework.hateoas', name='Link'}"
          }
        }
      },
      "title": "CollectionModel«RanZone»",
      "xml": {
        "name": "entities",
        "attribute": false,
        "wrapped": false
      },
      "description": "Resources of RanZone"
    },
    "CollectionModel«Site»": {
      "type": "object",
      "required": [
        "_embedded",
        "_links"
      ],
      "properties": {
        "_embedded": {
          "$ref": "#/definitions/EmbeddedCollection«Site»"
        },
        "_links": {
          "type": "object",
          "description": "Link collection",
          "additionalProperties": {
            "$ref": "#/definitions/Error-ModelName{namespace='org.springframework.hateoas', name='Link'}"
          }
        }
      },
      "title": "CollectionModel«Site»",
      "xml": {
        "name": "entities",
        "attribute": false,
        "wrapped": false
      },
      "description": "Resources of Site"
    },
    "CollectionModel«VimAccount»": {
      "type": "object",
      "required": [
        "_embedded",
        "_links"
      ],
      "properties": {
        "_embedded": {
          "$ref": "#/definitions/EmbeddedCollection«VimAccount»"
        },
        "_links": {
          "type": "object",
          "description": "Link collection",
          "additionalProperties": {
            "$ref": "#/definitions/Error-ModelName{namespace='org.springframework.hateoas', name='Link'}"
          }
        }
      },
      "title": "CollectionModel«VimAccount»",
      "xml": {
        "name": "entities",
        "attribute": false,
        "wrapped": false
      },
      "description": "Resources of VimAccount"
    },
    "Credentials": {
      "type": "object",
      "required": [
        "host",
        "password",
        "port",
        "project",
        "username"
      ],
      "properties": {
        "host": {
          "type": "string",
          "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "password": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int64",
          "maximum": 65535,
          "exclusiveMaximum": false
        },
        "project": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "title": "Credentials"
    },
    "DataShipper": {
      "type": "object",
      "required": [
        "configurationScript",
        "dataShipperId",
        "ipAddress",
        "stopConfigScript",
        "username"
      ],
      "properties": {
        "configurationScript": {
          "type": "string"
        },
        "dataShipperId": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "ipAddress": {
          "type": "string",
          "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
        },
        "metricType": {
          "type": "string",
          "enum": [
            "BANDWIDTH",
            "CPU_CONSUMPTION",
            "JITTER",
            "LATENCY",
            "LOST_PKT",
            "MEMORY_CONSUMPTION",
            "OTHER",
            "RECEIVED_PKT",
            "SENT_PKT"
          ]
        },
        "password": {
          "type": "string"
        },
        "stopConfigScript": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "title": "DataShipper"
    },
    "EmbeddedCollection«AvailabilityZone»": {
      "type": "object",
      "required": [
        "availabilityZones"
      ],
      "properties": {
        "availabilityZones": {
          "type": "array",
          "description": "Resource collection",
          "items": {
            "$ref": "#/definitions/AvailabilityZone"
          }
        }
      },
      "title": "EmbeddedCollection«AvailabilityZone»",
      "xml": {
        "name": "content",
        "wrapped": true
      },
      "description": "Embedded collection of AvailabilityZone"
    },
    "EmbeddedCollection«DataShipper»": {
      "type": "object",
      "required": [
        "dataShippers"
      ],
      "properties": {
        "dataShippers": {
          "type": "array",
          "description": "Resource collection",
          "items": {
            "$ref": "#/definitions/DataShipper"
          }
        }
      },
      "title": "EmbeddedCollection«DataShipper»",
      "xml": {
        "name": "content",
        "wrapped": true
      },
      "description": "Embedded collection of DataShipper"
    },
    "EmbeddedCollection«LccnSubscription»": {
      "type": "object",
      "required": [
        "subscriptions"
      ],
      "properties": {
        "subscriptions": {
          "type": "array",
          "description": "Resource collection",
          "items": {
            "$ref": "#/definitions/LccnSubscription"
          }
        }
      },
      "title": "EmbeddedCollection«LccnSubscription»",
      "xml": {
        "name": "content",
        "wrapped": true
      },
      "description": "Embedded collection of LccnSubscription"
    },
    "EmbeddedCollection«Network»": {
      "type": "object",
      "required": [
        "networks"
      ],
      "properties": {
        "networks": {
          "type": "array",
          "description": "Resource collection",
          "items": {
            "$ref": "#/definitions/Network"
          }
        }
      },
      "title": "EmbeddedCollection«Network»",
      "xml": {
        "name": "content",
        "wrapped": true
      },
      "description": "Embedded collection of Network"
    },
    "EmbeddedCollection«NfvOrchestrator»": {
      "type": "object",
      "required": [
        "nfvOrchestrators"
      ],
      "properties": {
        "nfvOrchestrators": {
          "type": "array",
          "description": "Resource collection",
          "items": {
            "$ref": "#/definitions/NfvOrchestrator"
          }
        }
      },
      "title": "EmbeddedCollection«NfvOrchestrator»",
      "xml": {
        "name": "content",
        "wrapped": true
      },
      "description": "Embedded collection of NfvOrchestrator"
    },
    "EmbeddedCollection«RanOrchestrator»": {
      "type": "object",
      "required": [
        "ranOrchestrators"
      ],
      "properties": {
        "ranOrchestrators": {
          "type": "array",
          "description": "Resource collection",
          "items": {
            "$ref": "#/definitions/RanOrchestrator"
          }
        }
      },
      "title": "EmbeddedCollection«RanOrchestrator»",
      "xml": {
        "name": "content",
        "wrapped": true
      },
      "description": "Embedded collection of RanOrchestrator"
    },
    "EmbeddedCollection«RanZone»": {
      "type": "object",
      "required": [
        "ranZones"
      ],
      "properties": {
        "ranZones": {
          "type": "array",
          "description": "Resource collection",
          "items": {
            "$ref": "#/definitions/RanZone"
          }
        }
      },
      "title": "EmbeddedCollection«RanZone»",
      "xml": {
        "name": "content",
        "wrapped": true
      },
      "description": "Embedded collection of RanZone"
    },
    "EmbeddedCollection«Site»": {
      "type": "object",
      "required": [
        "sites"
      ],
      "properties": {
        "sites": {
          "type": "array",
          "description": "Resource collection",
          "items": {
            "$ref": "#/definitions/Site"
          }
        }
      },
      "title": "EmbeddedCollection«Site»",
      "xml": {
        "name": "content",
        "wrapped": true
      },
      "description": "Embedded collection of Site"
    },
    "EmbeddedCollection«VimAccount»": {
      "type": "object",
      "required": [
        "vimAccounts"
      ],
      "properties": {
        "vimAccounts": {
          "type": "array",
          "description": "Resource collection",
          "items": {
            "$ref": "#/definitions/VimAccount"
          }
        }
      },
      "title": "EmbeddedCollection«VimAccount»",
      "xml": {
        "name": "content",
        "wrapped": true
      },
      "description": "Embedded collection of VimAccount"
    },
    "EntityModel«AvailabilityZone»": {
      "type": "object",
      "required": [
        "location",
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "links": {
          "$ref": "#/definitions/Links"
        },
        "location": {
          "type": "string",
          "enum": [
            "CLOUD",
            "EDGE"
          ]
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "EntityModel«AvailabilityZone»"
    },
    "EntityModel«DataShipper»": {
      "type": "object",
      "required": [
        "configurationScript",
        "dataShipperId",
        "ipAddress",
        "stopConfigScript",
        "username"
      ],
      "properties": {
        "configurationScript": {
          "type": "string"
        },
        "dataShipperId": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "ipAddress": {
          "type": "string",
          "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
        },
        "links": {
          "$ref": "#/definitions/Links"
        },
        "metricType": {
          "type": "string",
          "enum": [
            "BANDWIDTH",
            "CPU_CONSUMPTION",
            "JITTER",
            "LATENCY",
            "LOST_PKT",
            "MEMORY_CONSUMPTION",
            "OTHER",
            "RECEIVED_PKT",
            "SENT_PKT"
          ]
        },
        "password": {
          "type": "string"
        },
        "stopConfigScript": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "title": "EntityModel«DataShipper»"
    },
    "EntityModel«LccnSubscription»": {
      "type": "object",
      "required": [
        "callbackUri",
        "nsInstanceId"
      ],
      "properties": {
        "callbackUri": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "links": {
          "$ref": "#/definitions/Links"
        },
        "notificationTypes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "NsIdentifierCreationNotification",
              "NsIdentifierDeletionNotification",
              "NsLcmOperationOccurrenceNotification"
            ]
          }
        },
        "nsInstanceId": {
          "type": "string",
          "format": "uuid"
        }
      },
      "title": "EntityModel«LccnSubscription»"
    },
    "EntityModel«Network»": {
      "type": "object",
      "required": [
        "external_net",
        "floating_ip",
        "mgmt_net",
        "vim_network_name"
      ],
      "properties": {
        "cidr": {
          "type": "string",
          "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(/(\\d|[1-2]\\d|3[0-2]))$"
        },
        "external_net": {
          "type": "boolean"
        },
        "floating_ip": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "links": {
          "$ref": "#/definitions/Links"
        },
        "mgmt_net": {
          "type": "boolean"
        },
        "vim_network_name": {
          "type": "string"
        }
      },
      "title": "EntityModel«Network»"
    },
    "EntityModel«NfvOrchestrator»": {
      "type": "object",
      "required": [
        "name",
        "operationalState",
        "type",
        "version"
      ],
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date"
        },
        "credentials": {
          "$ref": "#/definitions/Credentials"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "links": {
          "$ref": "#/definitions/Links"
        },
        "name": {
          "type": "string"
        },
        "operationalState": {
          "type": "string",
          "enum": [
            "DISABLED",
            "ENABLED"
          ]
        },
        "type": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string",
          "format": "date"
        },
        "uri": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "title": "EntityModel«NfvOrchestrator»"
    },
    "EntityModel«RanOrchestrator»": {
      "type": "object",
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "credentials": {
          "$ref": "#/definitions/Credentials"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "links": {
          "$ref": "#/definitions/Links"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        }
      },
      "title": "EntityModel«RanOrchestrator»"
    },
    "EntityModel«RanZone»": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "frequencies": {
          "type": "string"
        },
        "generation": {
          "type": "integer",
          "format": "int32",
          "minimum": 4,
          "exclusiveMinimum": false
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "links": {
          "$ref": "#/definitions/Links"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "name": {
          "type": "string"
        },
        "radius": {
          "type": "number",
          "format": "double"
        },
        "release": {
          "type": "string"
        }
      },
      "title": "EntityModel«RanZone»"
    },
    "EntityModel«Site»": {
      "type": "object",
      "required": [
        "kafkaIpAddress",
        "location",
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "kafkaIpAddress": {
          "type": "string",
          "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
        },
        "links": {
          "$ref": "#/definitions/Links"
        },
        "location": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "EntityModel«Site»"
    },
    "EntityModel«VimAccount»": {
      "type": "object",
      "required": [
        "name",
        "type",
        "vimAccountNfvoId"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "links": {
          "$ref": "#/definitions/Links"
        },
        "name": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        },
        "vimAccountNfvoId": {
          "type": "string",
          "format": "uuid"
        }
      },
      "title": "EntityModel«VimAccount»"
    },
    "LccnSubscription": {
      "type": "object",
      "required": [
        "callbackUri",
        "nsInstanceId"
      ],
      "properties": {
        "callbackUri": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "notificationTypes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "NsIdentifierCreationNotification",
              "NsIdentifierDeletionNotification",
              "NsLcmOperationOccurrenceNotification"
            ]
          }
        },
        "nsInstanceId": {
          "type": "string",
          "format": "uuid"
        }
      },
      "title": "LccnSubscription"
    },
    "Links": {
      "type": "object",
      "properties": {
        "empty": {
          "type": "boolean"
        }
      },
      "title": "Links"
    },
    "ModelAndView": {
      "type": "object",
      "properties": {
        "empty": {
          "type": "boolean"
        },
        "model": {
          "type": "object"
        },
        "modelMap": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "reference": {
          "type": "boolean"
        },
        "status": {
          "type": "string",
          "enum": [
            "ACCEPTED",
            "ALREADY_REPORTED",
            "BAD_GATEWAY",
            "BAD_REQUEST",
            "BANDWIDTH_LIMIT_EXCEEDED",
            "CHECKPOINT",
            "CONFLICT",
            "CONTINUE",
            "CREATED",
            "DESTINATION_LOCKED",
            "EXPECTATION_FAILED",
            "FAILED_DEPENDENCY",
            "FORBIDDEN",
            "FOUND",
            "GATEWAY_TIMEOUT",
            "GONE",
            "HTTP_VERSION_NOT_SUPPORTED",
            "IM_USED",
            "INSUFFICIENT_SPACE_ON_RESOURCE",
            "INSUFFICIENT_STORAGE",
            "INTERNAL_SERVER_ERROR",
            "I_AM_A_TEAPOT",
            "LENGTH_REQUIRED",
            "LOCKED",
            "LOOP_DETECTED",
            "METHOD_FAILURE",
            "METHOD_NOT_ALLOWED",
            "MOVED_PERMANENTLY",
            "MOVED_TEMPORARILY",
            "MULTIPLE_CHOICES",
            "MULTI_STATUS",
            "NETWORK_AUTHENTICATION_REQUIRED",
            "NON_AUTHORITATIVE_INFORMATION",
            "NOT_ACCEPTABLE",
            "NOT_EXTENDED",
            "NOT_FOUND",
            "NOT_IMPLEMENTED",
            "NOT_MODIFIED",
            "NO_CONTENT",
            "OK",
            "PARTIAL_CONTENT",
            "PAYLOAD_TOO_LARGE",
            "PAYMENT_REQUIRED",
            "PERMANENT_REDIRECT",
            "PRECONDITION_FAILED",
            "PRECONDITION_REQUIRED",
            "PROCESSING",
            "PROXY_AUTHENTICATION_REQUIRED",
            "REQUESTED_RANGE_NOT_SATISFIABLE",
            "REQUEST_ENTITY_TOO_LARGE",
            "REQUEST_HEADER_FIELDS_TOO_LARGE",
            "REQUEST_TIMEOUT",
            "REQUEST_URI_TOO_LONG",
            "RESET_CONTENT",
            "SEE_OTHER",
            "SERVICE_UNAVAILABLE",
            "SWITCHING_PROTOCOLS",
            "TEMPORARY_REDIRECT",
            "TOO_EARLY",
            "TOO_MANY_REQUESTS",
            "UNAUTHORIZED",
            "UNAVAILABLE_FOR_LEGAL_REASONS",
            "UNPROCESSABLE_ENTITY",
            "UNSUPPORTED_MEDIA_TYPE",
            "UPGRADE_REQUIRED",
            "URI_TOO_LONG",
            "USE_PROXY",
            "VARIANT_ALSO_NEGOTIATES"
          ]
        },
        "view": {
          "$ref": "#/definitions/View"
        },
        "viewName": {
          "type": "string"
        }
      },
      "title": "ModelAndView"
    },
    "Network": {
      "type": "object",
      "required": [
        "external_net",
        "floating_ip",
        "mgmt_net",
        "vim_network_name"
      ],
      "properties": {
        "cidr": {
          "type": "string",
          "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(/(\\d|[1-2]\\d|3[0-2]))$"
        },
        "external_net": {
          "type": "boolean"
        },
        "floating_ip": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "mgmt_net": {
          "type": "boolean"
        },
        "vim_network_name": {
          "type": "string"
        }
      },
      "title": "Network"
    },
    "NfvOrchestrator": {
      "type": "object",
      "required": [
        "name",
        "operationalState",
        "type",
        "version"
      ],
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date"
        },
        "credentials": {
          "$ref": "#/definitions/Credentials"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "operationalState": {
          "type": "string",
          "enum": [
            "DISABLED",
            "ENABLED"
          ]
        },
        "type": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string",
          "format": "date"
        },
        "uri": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "title": "NfvOrchestrator"
    },
    "RanOrchestrator": {
      "type": "object",
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "credentials": {
          "$ref": "#/definitions/Credentials"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        }
      },
      "title": "RanOrchestrator"
    },
    "RanZone": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "frequencies": {
          "type": "string"
        },
        "generation": {
          "type": "integer",
          "format": "int32",
          "minimum": 4,
          "exclusiveMinimum": false
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "name": {
          "type": "string"
        },
        "radius": {
          "type": "number",
          "format": "double"
        },
        "release": {
          "type": "string"
        }
      },
      "title": "RanZone"
    },
    "RepresentationModel«object»": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        }
      },
      "title": "RepresentationModel«object»"
    },
    "Site": {
      "type": "object",
      "required": [
        "kafkaIpAddress",
        "location",
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "kafkaIpAddress": {
          "type": "string",
          "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
        },
        "location": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "Site"
    },
    "View": {
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string"
        }
      },
      "title": "View"
    },
    "VimAccount": {
      "type": "object",
      "required": [
        "name",
        "type",
        "vimAccountNfvoId"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        },
        "vimAccountNfvoId": {
          "type": "string",
          "format": "uuid"
        }
      },
      "title": "VimAccount"
    }
  }
}
